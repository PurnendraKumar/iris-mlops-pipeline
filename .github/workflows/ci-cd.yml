name: Build Iris Mlops Pipeline Docker Image
run-name: ${{ github.actor }} is building container image

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_IMAGE: purnendrakumar/iris-mlops-pipeline
  PYTHON_VERSION: '3.11'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Generate test data and train model
        run: |
          python src/data_preprocessing.py
          python -m src.model_training        
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: models
          path: models/

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: models
          path: models/
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull latest image
        run: docker pull purnendrakumar/iris-mlops-pipeline:latest

      - name: Deploy to staging
        env:
          DOCKER_IMAGE: purnendrakumar/iris-mlops-pipeline:latest
        run: |
          chmod +x deploy.sh
          ./deploy.sh local

      - name: Run health check
        run: |
          echo "Waiting for app to respond..."
          for i in {1..10}; do
            if curl -f http://localhost:8000/health > /dev/null 2>&1; then
              echo "Service is healthy!"
              exit 0
            fi
            echo "Attempt $i: Service not ready yet..."
            sleep 5
          done
          echo "Service failed health check."
          exit 1
